using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace DIYShopSys
{
    public partial class Sales : Form
    {
        MainMenu mainMenu;
        DataSet dataset;
        Double total;
        public Sales()
        {
            InitializeComponent();
            resetDataset();
            Items.Columns[0].Visible = false;
            Basket.Columns[0].Visible = false;
            /*used this to hide columns
             * https://learn.microsoft.com/en-us/dotnet/desktop/winforms/controls/remove-autogenerated-columns-from-a-wf-datagridview-control?view=netframeworkdesktop-4.8
                */
        }
        private void AddToBasket_Click(object sender, EventArgs e)
        {
            if (Items.SelectedRows.Count == 1)
            {
                //adding price to total
                total += Convert.ToDouble(Items.SelectedRows[0].Cells[2].Value.ToString());
                TotalLabel.Text = "total = " + String.Format("{0:.00}", total);
                if (Convert.ToInt32(Items.SelectedRows[0].Cells[3].Value) == 0)
                {
                    MessageBox.Show("Maximum" + Items.SelectedRows[0].Cells[1].Value.ToString() + " Reached", "Error", MessageBoxButtons.OK);
                    return;
                }
                else if (Basket.Rows.Count > 0)
                {
                    for (int i = 0; i < Basket.Rows.Count; i++)
                    {
                        //source for selectectedRows.index[2] second answer :https://stackoverflow.com/questions/3578144/index-of-currently-selected-row-in-datagridview
                        if (Basket.Rows[i].Cells[1].Value.ToString().Equals(Items.SelectedRows[0].Cells[1].Value.ToString()))
                        {
                            //cost
                            Basket.Rows[i].Cells[3].Value = Convert.ToInt32(dataset.Tables[1].Rows[i][3]) + 1;
                            //total cost
                            Basket.Rows[i].Cells[4].Value = Convert.ToInt32(dataset.Tables[1].Rows[i][4]) + 1;
                            //price
                            Items.SelectedRows[0].Cells[3].Value = Convert.ToInt32(Items.SelectedRows[0].Cells[3].Value) - 1;
                            return;
                        }
                    }
                    addToBasket();
                }
                else
                { 
                    addToBasket();
                }
            }
            else
            {
                MessageBox.Show("There is no items in the basket");
            }
        }

        private void RemoveFromBasket_Click(object sender, EventArgs e)
        {
            if (Basket.SelectedRows.Count == 1)
            {
                total -= Convert.ToDouble(Basket.SelectedRows[0].Cells[2].Value);
                TotalLabel.Text = "total = " + String.Format("{0:.00}", total);
                // for loop check
                for (int i = 0; i < Items.Rows.Count; i++)
                {
                    if (Convert.ToInt32(Items.Rows[i].Cells[0].Value) == Convert.ToInt32(Basket.SelectedRows[0].Cells[0].Value))
                    {
                        if (Convert.ToInt32(Basket.SelectedRows[0].Cells[4].Value) == 1)
                        {
                            if (Items.Rows[i].Cells[1].Value.ToString().Equals(Basket.SelectedRows[0].Cells[1].Value.ToString()))
                            {
                                //removes row in basket
                                Basket.Rows.RemoveAt(Basket.SelectedRows[0].Index);
                                Items.Rows[i].Cells[3].Value = Convert.ToInt32(dataset.Tables[0].Rows[Items.SelectedRows[0].Index][3]) + 1;
                                break;
                            }

                        }
                        else
                        {
                            //subtracts values by one
                            Basket.SelectedRows[0].Cells[3].Value = Convert.ToInt32(Basket.SelectedRows[0].Cells[3].Value) - 1;
                            Basket.SelectedRows[0].Cells[4].Value = Convert.ToInt32(Basket.SelectedRows[0].Cells[4].Value) - 1;
                            //add item value by one
                            Items.Rows[i].Cells[3].Value = Convert.ToInt32(Items.SelectedRows[0].Cells[3].Value) + 1;
                        }
                    }
                }
            }
        }

        private void BuyButton_Click(object sender, EventArgs e)
        {
            //messagebox yes no from https://stackoverflow.com/questions/3036829/how-do-i-create-a-message-box-with-yes-no-choices-and-a-dialogresult
            if (Basket.Rows.Count > 0)
            {
                DialogResult dialogresult = MessageBox.Show("Are You Sure", "Confirm", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
                if (dialogresult == DialogResult.Yes)
                {
                    //adding values to sales table
                    new Sql().AddOrUpdate("insert into sales values(" + new Sql().GetNextSaleId() + ",Sysdate," + total + ")");
                    DataSet dataset = new Sql().GetDataSet("select Max(Sale_id) from Sales");
                    //adding items to basket and subtracting item quantity values
                    for (int i = 0; i < Basket.Rows.Count; i++)
                    {
                        new Sql().AddOrUpdate("insert into basket values(" + Basket.Rows[i].Cells[0].Value + "," + dataset.Tables[0].Rows[0][0] + "," + Basket.Rows[0].Cells[4].Value + ")");
                        new Sql().AddOrUpdate("Update Items set quantity = quantity - " + Basket.Rows[i].Cells[4].Value + " Where Item_Id = " + Basket.Rows[i].Cells[0].Value);
                    }
                    MessageBox.Show("Items Ordered", "Items Ordered", MessageBoxButtons.OK);
                    resetDataset();
                }
            }
            else
            {
                MessageBox.Show("No item in Basket");
            }
        }
        private void addToBasket()
        {
            DataRow row = dataset.Tables[1].NewRow();
            //id
            row[0] = Items.SelectedRows[0].Cells[0].Value.ToString();
            //name
            row[1] = Items.SelectedRows[0].Cells[1].Value.ToString();
            //price
            row[2] = Items.SelectedRows[0].Cells[2].Value.ToString();
            //Total price
            row[3] = Items.SelectedRows[0].Cells[2].Value.ToString();
            //quantity
            row[4] = 1;
            dataset.Tables[1].Rows.Add(row);
            Items.SelectedRows[0].Cells[3].Value = Convert.ToInt32(Items.SelectedRows[0].Cells[3].Value) - 1;
        }
        private void resetDataset()
        {
            //how to create a datatable https://learn.microsoft.com/en-us/dotnet/api/system.data.datatable?view=net-7.0
            this.dataset = new Sql().GetDataSet("select item_id, item_name, item_price, quantity from items where item_status = 'a' and quantity >= 1");
            //renaming the column headings
            dataset.Tables[0].Columns[1].ColumnName = "Name";
            dataset.Tables[0].Columns[2].ColumnName = "Price";
            dataset.Tables[0].Columns[3].ColumnName = "Quantity";
            //creating basket table
            DataTable table = new DataTable("Basket");
            DataColumn column;
            //id
            column = new DataColumn();
            column.DataType = typeof(int);
            column.ColumnName = "item Id";
            table.Columns.Add(column);
            //name
            column = new DataColumn();
            column.DataType = typeof(string);
            column.ColumnName = "Name";
            column.ReadOnly = true;
            table.Columns.Add(column);
            //price
            column = new DataColumn();
            column.DataType = typeof(double);
            column.ColumnName = "Cost";
            table.Columns.Add(column);
            //total price
            column = new DataColumn();
            column.DataType = typeof(double);
            column.ColumnName = "Total Cost";
            table.Columns.Add(column);
            //Quantity
            column = new DataColumn();
            column.DataType = typeof(int);
            column.ColumnName = "Quantity";
            table.Columns.Add(column);

            dataset.Tables.Add(table);

            Items.DataSource = dataset.Tables[0];
            Basket.DataSource = dataset.Tables[1];
            total = 0;
            TotalLabel.Text = "total = ";
            Items.Columns[3].DefaultCellStyle.Format = "0.00";
            Basket.Columns[2].DefaultCellStyle.Format = "0.00";
            Basket.Columns[3].DefaultCellStyle.Format = "0.00";
        }
        //returns to main menu
        private void ReturnButton_Click(object sender, EventArgs e)
        {
            new Login(this).Show();
        }

        private void Sales_FormClosed(object sender, FormClosedEventArgs e)
        {
            Application.Exit();
        }
    }
}
